package config

import (
	"fmt"
	"log"
	"os"

	"github.com/joho/godotenv"
	"gorm.io/driver/postgres"
	"gorm.io/gorm"
	"habit-tracker/models"
)

var DB *gorm.DB
var JWTSecret string // JWT —Å–µ–∫—Ä–µ—Ç—ñ–Ω —Å–∞“õ—Ç–∞—É “Ø—à—ñ–Ω

func ConnectDatabase() {
	// .env —Ñ–∞–π–ª—ã–Ω –∂“Ø–∫—Ç–µ—É
	err := godotenv.Load()
	if err != nil {
		log.Fatal("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ env. —Ñ–∞–π–ª–∞")
	}

	// DSN (Data Source Name) –∂–∞—Å–∞—É
	dsn := fmt.Sprintf("host=%s user=%s password=%s dbname=%s port=%s sslmode=disable",
		os.Getenv("DB_HOST"),
		os.Getenv("DB_USER"),
		os.Getenv("DB_PASSWORD"),
		os.Getenv("DB_NAME"),
		os.Getenv("DB_PORT"),
	)

	// üîå GORM –∞—Ä“õ—ã–ª—ã –±–∞–∑–∞“ì–∞ “õ–æ—Å—ã–ª—É
	db, err := gorm.Open(postgres.Open(dsn), &gorm.Config{})
	if err != nil {
		log.Fatal("–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:", err)
	}

	DB = db

	// JWT —Å–µ–∫—Ä–µ—Ç—ñ–Ω –∂“Ø–∫—Ç–µ—É
	JWTSecret = os.Getenv("JWT_SECRET")
	if JWTSecret == "" {
		log.Fatal("JWT_SECRET –∞–Ω—ã“õ—Ç–∞–ª–º–∞“ì–∞–Ω")
	}

	// –ú–∏–≥—Ä–∞—Ü–∏—è–ª–∞—Ä–¥—ã –æ—Ä—ã–Ω–¥–∞—É
	Migrate()

	fmt.Println("–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ!")
}

func Migrate() {
	err := DB.AutoMigrate(&models.User{}, &models.Habit{})
	if err != nil {
		log.Fatal("–û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏:", err)
	}
	fmt.Println("–ú–∏–≥—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!")
}
